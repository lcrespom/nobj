// Generated by CoffeeScript 1.6.3
(function() {
  define(function() {
    return {
      get: function(collection) {
        var deferred;
        deferred = $.Deferred();
        $.ajax({
          type: 'POST',
          url: "/data/" + collection,
          data: {
            _method: 'get'
          }
        }).done(function(result) {
          if (result.err) {
            return deferred.reject(result.err);
          } else {
            return deferred.resolve(result.items);
          }
        }).fail(function(result) {
          return deferred.reject(result);
        });
        return deferred.promise();
      },
      put: function(collection, putData) {
        var deferred;
        deferred = $.Deferred();
        putData._method = 'put';
        $.ajax({
          type: 'POST',
          url: "/data/" + collection,
          data: putData
        }).done(function(result) {
          if (result.err) {
            return deferred.reject(result.err);
          } else {
            return deferred.resolve(result);
          }
        }).fail(function(result) {
          return deferred.reject(result);
        });
        return deferred.promise();
      },
      "delete": function(collection, oid) {
        var deferred;
        deferred = $.Deferred();
        $.ajax({
          type: 'POST',
          url: "/data/" + collection,
          data: {
            _method: 'delete',
            _id: oid
          }
        }).done(function(result) {
          if (result.err) {
            return deferred.reject(result.err);
          } else {
            return deferred.resolve(result);
          }
        }).fail(function(result) {
          return deferred.reject(result);
        });
        return deferred.promise();
      },
      post: function(collection, postData) {
        var deferred;
        deferred = $.Deferred();
        postData._method = 'put';
        $.ajax({
          type: 'POST',
          url: "/data/" + collection,
          data: postData
        }).done(function(result) {
          if (result.err) {
            return deferred.reject(result.err);
          } else {
            return deferred.resolve(result);
          }
        }).fail(function(result) {
          return deferred.reject(result);
        });
        return deferred.promise();
      }
    };
  });

}).call(this);
