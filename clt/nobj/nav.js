// Generated by CoffeeScript 1.6.3
(function() {
  var handleHistory, nav;

  nav = {
    oldViewId: '',
    navArea: null,
    history: {},
    setNavigationArea: function(elementId, defaultViewId) {
      return this.navArea = {
        id: elementId,
        defaultViewId: defaultViewId
      };
    },
    loadDefaultView: function() {
      return this.loadView(nav.navArea.defaultViewId);
    },
    loadView: function(viewId) {
      var oldController, url, _ref,
        _this = this;
      oldController = this.controller;
      this.controller = typeof this.getController === "function" ? this.getController(viewId) : void 0;
      if (!this.controller) {
        console.warn("No controller found for view '" + viewId + "'");
      }
      if (oldController != null) {
        if (typeof oldController.beforeUnload === "function") {
          oldController.beforeUnload(this.oldViewId);
        }
      }
      if ((_ref = this.controller) != null) {
        if (typeof _ref.beforeLoad === "function") {
          _ref.beforeLoad(viewId);
        }
      }
      url = viewId + '.html';
      return $('#' + this.navArea.id).load(url, function(text, status) {
        var _ref1;
        console.log('Loaded', url, '- status:', status);
        if (oldController != null) {
          if (typeof oldController.afterUnload === "function") {
            oldController.afterUnload(_this.oldViewId);
          }
        }
        if ((_ref1 = _this.controller) != null) {
          if (typeof _ref1.afterLoad === "function") {
            _ref1.afterLoad(viewId);
          }
        }
        return _this.oldViewId = viewId;
      });
    }
  };

  handleHistory = function(loc) {
    var navArea;
    navArea = nav.history[loc];
    if (navArea) {
      return nav.navArea = navArea;
    } else {
      return nav.history[loc] = nav.navArea;
    }
  };

  window.onhashchange = function() {
    var viewId;
    console.log('Hash changed to ' + location.hash);
    if (!nav.navArea) {
      console.error('Navigation module has not been initialized');
    }
    handleHistory(location.hash);
    if (location.hash.length <= 0) {
      viewId = nav.navArea.defaultViewId;
    } else {
      viewId = location.hash.substring(1);
    }
    return nav.loadView(viewId);
  };

  module.exports = nav;

}).call(this);
